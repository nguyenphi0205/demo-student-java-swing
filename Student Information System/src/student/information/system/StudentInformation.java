    /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package student.information.system;

/**
 *
 * @author Nguyen
 */
import net.proteanit.sql.DbUtils;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
//import com.com.sun.glass.events.KeyEvent;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.StringTokenizer;
import javax.imageio.ImageIO;
import javax.swing.*;

public class StudentInformation extends javax.swing.JFrame {

    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    java.util.Date date = new java.util.Date();
    String nexttime = null;
    String currentDate = 1900 + date.getYear() + "-" + (date.getMonth() + 1) + "-" + date.getDate();
    String currentDatetime = 1900 + date.getYear() + "-" + (date.getMonth() + 1) + "-" + date.getDate() + " " + date.getHours() + ":" + date.getMinutes() + ":" + date.getSeconds();

    /**
     * Creates new form Staff_details
     */
    public StudentInformation() {
        initComponents();
        conn = db.java_db();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2,
                size.height / 2 - getHeight() / 2);
        currentDate();
        Update_table();

        txt_emp.setText(String.valueOf(Emp.empId).toString());
    }

    public void currentDate() {

        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);

        lbl_date.setText((month + 1) + "/" + day + "/" + year);

        //Time
        int second = cal.get(Calendar.SECOND);
        int minute = cal.get(Calendar.MINUTE);
        int hour = cal.get(Calendar.HOUR);

        lbl_time.setText(hour + ":" + (minute) + ":" + second);

    }

    private void Update_table() {
        try {
            String sql = "select * from Student_Information";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            student_table.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {

            try {
                rs.close();
                pst.close();

            } catch (Exception e) {

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jDialog1 = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txt_tel = new javax.swing.JTextField();
        txt_email = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        r_male = new javax.swing.JRadioButton();
        r_female = new javax.swing.JRadioButton();
        txt_dob = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_surname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txt_firstname = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txt_pc = new javax.swing.JTextField();
        txt_address = new javax.swing.JTextField();
        cmd_save = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txt_studentid = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_emp = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        student_table = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txt_search1 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        lbl_date = new javax.swing.JMenu();
        lbl_time = new javax.swing.JMenu();

        jMenu1.setText("File");
        jMenuBar2.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar2.add(jMenu2);

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Student Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Adobe Arabic", 1, 36))); // NOI18N

        jLabel7.setText("Contact Number :");

        jLabel6.setText("Email :");

        jLabel11.setText("Gender:");

        r_male.setText("Male");
        r_male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_maleActionPerformed(evt);
            }
        });

        r_female.setText("Female");
        r_female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_femaleActionPerformed(evt);
            }
        });

        jLabel3.setText("Date of Birth :");

        jLabel2.setText("Surname :");

        jLabel1.setText("First name :");

        txt_firstname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_firstnameActionPerformed(evt);
            }
        });

        jLabel8.setText("Address");

        jLabel16.setText("Student ID");

        txt_pc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_pcActionPerformed(evt);
            }
        });

        cmd_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/student/information/system/images/Save-icon.png"))); // NOI18N
        cmd_save.setText("Add Record");
        cmd_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_saveActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/student/information/system/images/erase-128.png"))); // NOI18N
        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/student/information/system/images/update icon.png"))); // NOI18N
        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/student/information/system/images/delete_16x16.gif"))); // NOI18N
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setText("ID");

        txt_studentid.setEditable(false);

        jLabel9.setText("yyyy-mm-dd");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(58, 58, 58)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txt_surname, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_firstname)
                            .addComponent(txt_dob)
                            .addComponent(txt_studentid, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE))
                        .addGap(4, 4, 4)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel16))
                        .addGap(71, 71, 71))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(97, 97, 97)
                        .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_address, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_tel, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmd_save, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)))
                    .addComponent(txt_pc, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addGap(89, 89, 89)
                .addComponent(r_male)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(r_female)
                .addGap(60, 60, 60))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cmd_save, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)))
                .addGap(239, 239, 239))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_studentid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(txt_tel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_firstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_surname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel16)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(r_female)
                            .addComponent(r_male)))
                    .addComponent(txt_pc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txt_emp.setText("emp");

        jLabel10.setText("Logged in As :");

        student_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        student_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                student_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(student_table);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Adobe Arabic", 1, 14))); // NOI18N

        jLabel13.setText("Student ID :");

        txt_search1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_search1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_search1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(318, 318, 318))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_search1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jButton4.setText("back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        File.setText("File");

        jMenuItem1.setText("Attach Image");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        File.add(jMenuItem1);

        jMenuBar1.add(File);

        lbl_date.setText("Date");
        jMenuBar1.add(lbl_date);

        lbl_time.setText("Time");
        jMenuBar1.add(lbl_time);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_emp))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(74, 74, 74)
                                        .addComponent(jButton4)
                                        .addGap(0, 343, Short.MAX_VALUE))))
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_emp))
                        .addGap(13, 13, 13)
                        .addComponent(jButton4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:

        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();

        filename = f.getAbsolutePath();
     //   ImageIcon imageIcon = new ImageIcon(new ImageIcon(filename).getImage().getScaledInstance(lbl_img.getWidth(), lbl_img.getHeight(), Image.SCALE_DEFAULT));
        //   lbl_img.setIcon(imageIcon);
        try {

            File image = new File(filename);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];

            for (int readNum; (readNum = fis.read(buf)) != -1;) {

                bos.write(buf, 0, readNum);
            }
            person_image = bos.toByteArray();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        txt_firstname.setText("");
        txt_surname.setText("");
        txt_tel.setText("");
        txt_dob.setText("");
        txt_email.setText("");
        txt_address.setText("");
       // txt_courseid.setText("");
        txt_studentid.setText("");
       // txt_me.setText("");
       // txt_fe.setText("");
//        txt_courseid1.setText("");
  //      txt_add2.setText("");
        txt_pc.setText("");
    //    txt_apt.setText("");
        //   lbl_img.setIcon(null);
        txt_search1.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmd_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_saveActionPerformed
        // TODO add your handling code here:
        int p = JOptionPane.showConfirmDialog(null, "Are you sure you want to add record?", "Add Record", JOptionPane.YES_NO_OPTION);
        if (p == 0) {
            //check required,length first name
            if (txt_firstname.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "first name not null !");
                txt_firstname.requestFocus();
                return;
            }
            if (txt_firstname.getText().length() > 30) {
                JOptionPane.showMessageDialog(this, "first must < 30 characters !");

                txt_firstname.requestFocus();
                return;
            }

            //check required,length surname
            if (txt_surname.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "surname name not null !");

                txt_surname.requestFocus();
                return;
            }
            if (txt_surname.getText().length() > 20) {
                JOptionPane.showMessageDialog(this, "surname must < 20 characters !");

                txt_surname.requestFocus();
                return;
            }

            //validate date of birth
            if (txt_dob.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Day of Birth is required", "ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (!txt_dob.getText().trim().matches("^[0-9]{4}[-]{1}[0-9]{1,2}[-]{1}[0-9]{1,2}$")) {
                JOptionPane.showMessageDialog(this, "Day of Birth not true, format is yyyy-mm-dd", "ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (txt_dob.getText() != null) {
                String currentDoB = txt_dob.getText();
                int yearTest = 0;
                int monthTest = 0;
                int dayTest = 0;
                StringTokenizer stn = new StringTokenizer(currentDoB, "-");
                int count = 0;
                while (stn.hasMoreTokens()) {
                    if (count == 0) {
                        yearTest = Integer.valueOf(stn.nextToken());
                    }
                    if (count == 1) {
                        monthTest = Integer.valueOf(stn.nextToken());
                    }
                    if (count == 2) {
                        dayTest = Integer.valueOf(stn.nextToken());
                    }
                    count++;
                }
                if (monthTest >= 13) {
                    JOptionPane.showMessageDialog(this, "tháng không có 13 ", "ERROR", JOptionPane.ERROR_MESSAGE);
                    txt_dob.setText("");
                    txt_dob.requestFocus();
                    return;
                }
                if (dayTest >= 32) {
                    JOptionPane.showMessageDialog(this, "không có ngày 32 ", "ERROR", JOptionPane.ERROR_MESSAGE);
                    txt_dob.setText("");
                    txt_dob.requestFocus();
                    return;
                }
                switch (monthTest) {
                    case 1:
                    case 3:
                    case 5:
                    case 7:
                    case 8:
                    case 10:
                    case 12: {
                        if (dayTest > 31) {
                            JOptionPane.showMessageDialog(this, "tháng này không có ngày 32", "ERROR", JOptionPane.ERROR_MESSAGE);
                            txt_dob.setText("");
                            txt_dob.requestFocus();
                            return;
                        }
                        break;
                    }
                    case 4:
                    case 6:
                    case 9:
                    case 11:
                        if (dayTest > 30) {
                            JOptionPane.showMessageDialog(this, "tháng này không có ngày 31", "ERROR", JOptionPane.ERROR_MESSAGE);
                            txt_dob.setText("");
                            txt_dob.requestFocus();
                            return;
                        }
                        break;

                    case 2: {
                        if (yearTest % 4 == 0) {
                            if (dayTest > 29) {
                                JOptionPane.showMessageDialog(this, "Day of Birth Not True", "ERROR", JOptionPane.ERROR_MESSAGE);
                                txt_dob.setText("");
                                txt_dob.requestFocus();
                                return;
                            }
                        } else if (dayTest > 28) {
                            JOptionPane.showMessageDialog(this, "Day of Birth Not True", "ERROR", JOptionPane.ERROR_MESSAGE);
                            txt_dob.setText("");
                            txt_dob.requestFocus();
                            return;
                        }
                        break;

                    }

                    default: {
                        JOptionPane.showMessageDialog(this, "Day of Birth Not True", "ERROR", JOptionPane.ERROR_MESSAGE);
                        txt_dob.setText("");
                        txt_dob.requestFocus();
                        return;
                    }

                }
                if (yearTest > (date.getYear() + 1900)) {
                    JOptionPane.showMessageDialog(this, "Day of Birth Not True", "ERROR", JOptionPane.ERROR_MESSAGE);
                    txt_dob.setText("");
                    return;
                }
                if (yearTest == (date.getYear() + 1900)) {
                    if (monthTest > (date.getMonth() + 1)) {
                        JOptionPane.showMessageDialog(this, "Day of Birth Not True", "ERROR", JOptionPane.ERROR_MESSAGE);
                        txt_dob.setText("");
                        return;
                    }
                    if (monthTest == (date.getMonth() + 1)) {
                        if (dayTest > (date.getDay())) {
                            JOptionPane.showMessageDialog(this, "Day of Birth Not True", "ERROR", JOptionPane.ERROR_MESSAGE);
                            txt_dob.setText("");
                            return;
                        }
                    }
                }
//             tron 18 tuoi
                if ((date.getYear() + 1900) - yearTest < 18) {
                    JOptionPane.showMessageDialog(this, "The Age Not Enought 18", "ERROR", JOptionPane.ERROR_MESSAGE);
                    txt_dob.setText("");
                    return;
                } else if (((date.getYear() + 1900) - yearTest) == 18) {
//                xet monthTest nho hon thang sinh thi error, neu bang`thi xet dayTest
                    if (monthTest < date.getMonth() + 1) {
                        JOptionPane.showMessageDialog(this, "The Age Not Enought 18", "ERROR", JOptionPane.ERROR_MESSAGE);
                        txt_dob.setText("");
                        return;
                    } else if (monthTest == date.getMonth() + 1) {
                        if (date.getDate() > dayTest) {
                            JOptionPane.showMessageDialog(this, "The Age Not Enought 18", "ERROR", JOptionPane.ERROR_MESSAGE);
                            txt_dob.setText("");
                            return;
                        }
                    }
                }

            }

            //check eamil
            if (txt_email.getText()
                    .equals("")) {
                JOptionPane.showMessageDialog(this, "Email not null!");
                //ms_email.setText("Email must < 50 characters !");
                txt_email.requestFocus();
                return;

            }
            if (txt_email.getText().length() > 50) {
                JOptionPane.showMessageDialog(this, "Email must < 50 characters !");
                //ms_email.setText("Email must < 50 characters !");
                txt_email.requestFocus();
                return;
            }
            if (CheckFrom.checkEmail(txt_email.getText()) == false) {
                JOptionPane.showMessageDialog(this, "Email not validate !");
                //  ms_email.setText("Email not validate !");
                txt_email.requestFocus();
                return;
            }
            //check sdt
            if (txt_tel.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Phone not null!");

                txt_tel.requestFocus();
                return;

            }
            if (txt_tel.getText().length() > 15) {
                JOptionPane.showMessageDialog(this, "Phone must < 15 characters !");

                txt_tel.requestFocus();
                return;

            }

            if (CheckFrom.checkPhoneNumber(txt_tel.getText()) == false) {

                JOptionPane.showMessageDialog(this, "Phone not validate !");

                txt_tel.requestFocus();
                return;
            }
            if (CheckFrom.isNumberic(txt_tel.getText()) == false) {

                JOptionPane.showMessageDialog(this, "phone not valide !", "ERROR", JOptionPane.ERROR_MESSAGE);
                txt_tel.requestFocus();
                return;
            }
            //check address

            if (txt_address.getText()
                    .equals("")) {
                JOptionPane.showMessageDialog(this, "Address not null !");
                //ms_address.setText("Address must < 100 characters !");
                txt_address.requestFocus();
                return;
            }

            if (txt_address.getText().length() > 1000) {
                JOptionPane.showMessageDialog(this, "Address must < 1000 characters !");
                //ms_address.setText("Address must < 100 characters !");
                txt_address.requestFocus();
                return;
            }

            //check batch
//            if (txt_add2.getText()
//                    .equals("")) {
//                JOptionPane.showMessageDialog(this, "batch not null !");
//                //ms_address.setText("Address must < 100 characters !");
//                txt_add2.requestFocus();
//                return;
//            }
//            if (CheckFrom.checkID1(txt_add2.getText()) == false & CheckFrom.checkID2(txt_add2.getText()) == false) {
//
//                JOptionPane.showMessageDialog(this, "batch must GTXXXXX or GCXXXXX .X is numberic and x 5 number !");
//
//                txt_add2.requestFocus();
//                return;
//            }
//
//            //check exam
//            if (txt_apt.getText()
//                    .equals("")) {
//                JOptionPane.showMessageDialog(this, "exam not null !");
//                //ms_address.setText("Address must < 100 characters !");
//                txt_apt.requestFocus();
//                return;
//            }
//            if (CheckFrom.isNumberic(txt_apt.getText()) == false) {
//
//                JOptionPane.showMessageDialog(this, "exam  not valide !", "ERROR", JOptionPane.ERROR_MESSAGE);
//                txt_apt.requestFocus();
//                return;
//            }
//            if (Float.parseFloat(txt_apt.getText()) < 0) {
//                JOptionPane.showMessageDialog(this, "exam  not <0 !");
//                //ms_address.setText("Address must < 100 characters !");
//                txt_apt.requestFocus();
//                return;
//            }
//            if (Float.parseFloat(txt_apt.getText()) > 100) {
//                JOptionPane.showMessageDialog(this, "exam  not >100 !");
//                //ms_address.setText("Address must < 100 characters !");
//                txt_apt.requestFocus();
//                return;
//            }

            //check student id
            if (txt_pc.getText()
                    .equals("")) {
                JOptionPane.showMessageDialog(this, "student id not null !");
                //ms_address.setText("Address must < 100 characters !");
                txt_pc.requestFocus();
                return;
            }
            if (CheckFrom.checkID1(txt_pc.getText()) == false & CheckFrom.checkID2(txt_pc.getText()) == false) {

                JOptionPane.showMessageDialog(this, "student id must GTXXXXX or GCXXXXX .X is numberic and x 5 number !");

                txt_pc.requestFocus();
                return;
            }
            //check major
//            if (txt_courseid.getText()
//                    .equals("")) {
//                JOptionPane.showMessageDialog(this, "major  not null !");
//                //ms_address.setText("Address must < 100 characters !");
//                txt_courseid.requestFocus();
//                return;
//            }
//            if (txt_courseid1.getText()
//                    .equals("")) {
//                JOptionPane.showMessageDialog(this, "course  not null !");
//                //ms_address.setText("Address must < 100 characters !");
//                txt_courseid1.requestFocus();
//                return;
//            }
//            if (txt_me.getText()
//                    .equals("")) {
//                JOptionPane.showMessageDialog(this, "Midterm-exam  not null !");
//                //ms_address.setText("Address must < 100 characters !");
//                txt_me.requestFocus();
//                return;
//            }
//            if (CheckFrom.isNumberic(txt_me.getText()) == false) {
//
//                JOptionPane.showMessageDialog(this, "Midterm-exam not valide !", "ERROR", JOptionPane.ERROR_MESSAGE);
//                txt_me.requestFocus();
//                return;
//            }
//            if (Float.parseFloat(txt_me.getText()) > 100) {
//                JOptionPane.showMessageDialog(this, "Midterm-exam  not >100 !");
//                //ms_address.setText("Address must < 100 characters !");
//                txt_me.requestFocus();
//                return;
//            }
//            if (Float.parseFloat(txt_me.getText()) < 0) {
//                JOptionPane.showMessageDialog(this, "Midterm-exam not <0!");
//                //ms_address.setText("Address must < 100 characters !");
//                txt_me.requestFocus();
//                return;
//            }
//
//            if (txt_fe.getText()
//                    .equals("")) {
//                JOptionPane.showMessageDialog(this, "Final-exam  not null !");
//                //ms_address.setText("Address must < 100 characters !");
//                txt_fe.requestFocus();
//                return;
//            }
//            if (Float.parseFloat(txt_fe.getText()) > 100) {
//                JOptionPane.showMessageDialog(this, "Final-exam  not >100 !");
//                //ms_address.setText("Address must < 100 characters !");
//                txt_fe.requestFocus();
//                return;
//            }
//            if (Float.parseFloat(txt_fe.getText()) < 0) {
//                JOptionPane.showMessageDialog(this, "Final-exam  not <0 !");
//                //ms_address.setText("Address must < 100 characters !");
//                txt_fe.requestFocus();
//                return;
//            }
//
//            if (CheckFrom.isNumberic(txt_fe.getText()) == false) {
//
//                JOptionPane.showMessageDialog(this, "Final-exam  not valide !", "ERROR", JOptionPane.ERROR_MESSAGE);
//                txt_fe.requestFocus();
//                return;
//            }

            try {
                String sql = "insert into Student_Information "
                        + "(first_name,surname,Dob,Email,"
                        + "Telephone,Address,"
                        + "Gender,"
                        + "Student_ID) values (?,?,?,?,?,?,?,?) ";

                pst = conn.prepareStatement(sql);
                pst.setString(1, txt_firstname.getText());
                pst.setString(2, txt_surname.getText());
                pst.setString(3, txt_dob.getText());
                pst.setString(4, txt_email.getText());
                pst.setString(5, txt_tel.getText());
                pst.setString(6, txt_address.getText());
//                pst.setBytes(7, person_image);
                pst.setString(7, gender);
//                pst.setString(8, txt_add2.getText());
                pst.setString(8, txt_pc.getText());
//                pst.setString(10, txt_apt.getText());
//                pst.setString(11, txt_courseid.getText());
//                pst.setString(12, txt_courseid1.getText());
//                pst.setString(13, txt_me.getText());
//                pst.setString(14, txt_fe.getText());
                pst.execute();
                JOptionPane.showMessageDialog(null, "Data is saved successfully");

            } catch (Exception e) {
                e.printStackTrace();
            }

            Date currentDate = GregorianCalendar.getInstance().getTime();
            DateFormat df = DateFormat.getDateInstance();
            String dateString = df.format(currentDate);

            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
            String timeString = sdf.format(d);

            String value0 = timeString;
            String value1 = dateString;
            String val = txt_emp.getText().toString();
            try {

                String reg = "insert into Audit (emp_id, date, status) values ('" + val + "','" + value0 + " / " + value1 + "','Added Record')";
                pst = conn.prepareStatement(reg);
                pst.execute();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            } finally {

                try {
                    rs.close();
                    pst.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);

                }
            }

        }
        Update_table();
    }//GEN-LAST:event_cmd_saveActionPerformed

    private void txt_firstnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_firstnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_firstnameActionPerformed

    private void r_femaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_femaleActionPerformed
        // TODO add your handling code here:
        gender = "Female";
        r_female.setSelected(true);
        r_male.setSelected(false);

    }//GEN-LAST:event_r_femaleActionPerformed

    private void r_maleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_maleActionPerformed
        // TODO add your handling code here:
        gender = "Male";
        r_male.setSelected(true);
        r_female.setSelected(false);
    }//GEN-LAST:event_r_maleActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        int p = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete record?", "Delete", JOptionPane.YES_NO_OPTION);
        if (p == 0) {
            Date currentDate = GregorianCalendar.getInstance().getTime();
            DateFormat df = DateFormat.getDateInstance();
            String dateString = df.format(currentDate);

            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
            String timeString = sdf.format(d);

            String value0 = timeString;
            String value1 = dateString;
            String val = txt_emp.getText().toString();
            try {
                String reg = "insert into Audit (emp_id, date, status) values ('" + val + "','" + value0 + " / " + value1 + "','Deleted Record')";
                pst = conn.prepareStatement(reg);
                pst.execute();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            String sql = "delete from Student_Information where id=? ";
            try {
                pst = conn.prepareStatement(sql);
                pst.setString(1, txt_studentid.getText());
                pst.execute();

                JOptionPane.showMessageDialog(null, "Record Deleted");

            } catch (Exception e) {

                JOptionPane.showMessageDialog(null, "phải xóa các dữ liệu đã nhập của student");
            } finally {

                try {
                    rs.close();
                    pst.close();

                } catch (Exception e) {

                }
            }
            Update_table();

        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        int p = JOptionPane.showConfirmDialog(null, "Are you sure you want to update?", "Update Record", JOptionPane.YES_NO_OPTION);
        if (p == 0) {

            try {

                String value1 = txt_firstname.getText();
                String value2 = txt_surname.getText();
                String value3 = txt_dob.getText();
                String value4 = txt_studentid.getText();
                String value5 = txt_email.getText();
                String value6 = txt_tel.getText();
                String value7 = txt_address.getText();
            //    String value9 = txt_add2.getText();
               // String value10 = txt_apt.getText();
                String value11 = txt_pc.getText();
//                String value12 = txt_courseid.getText();
//                String value13 = txt_courseid1.getText();
//                String value14 = txt_me.getText();
//                String value15 = txt_fe.getText();
//                String sql= "update Student_Information set id='"+value4+"',first_name='"+value1+"', surname='"+value2+"', "
//                        + "Dob='"+value3+"',Email='"+value5+"',Telephone='"+value6+"',Address='"+value7+"',Batch= '"+value9+"', "
//                        + "Exam='"+value10+"',Post_code ='"+value11+"''"where id='"+value4+"'";
                String sql = "update  Student_Information set  first_name='"+value1+"' ,surname='"+value2+"' ,Dob='"+value3+"' ,Email='"+value5+"',Telephone='"+value6+"' ,[Address]='"+value7+"' ,Student_ID='"+value11+"' WHERE id='"+value4+"'";
                pst = conn.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "Record Updated");

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }

            Date currentDate = GregorianCalendar.getInstance().getTime();
            DateFormat df = DateFormat.getDateInstance();
            String dateString = df.format(currentDate);

            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
            String timeString = sdf.format(d);

            String value0 = timeString;
            String values = dateString;
            String val = txt_emp.getText().toString();
            try {
                String reg = "insert into Audit (emp_id, date, status) values ('" + val + "','" + value0 + " / " + values + "','Updated Record')";
                pst = conn.prepareStatement(reg);
                pst.execute();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            } finally {

                try {
                    rs.close();
                    pst.close();

                } catch (Exception e) {

                }
            }
            Update_table();
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int Close = JOptionPane.showConfirmDialog(null, "Are you sure want close !");
        if (Close == 0) {
            this.dispose();
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void student_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_student_tableMouseClicked
        int row = this.student_table.getSelectedRow();
        txt_studentid.setText((String) (student_table.getValueAt(row, 0)).toString());
        txt_firstname.setText((String) (student_table.getValueAt(row, 1)));
        txt_surname.setText((String) (student_table.getValueAt(row, 2)));
        txt_dob.setText((String) (student_table.getValueAt(row, 3)));
//txt_surname.setText((String) (student_table.getValueAt(row, 5)));
        txt_email.setText((String) (student_table.getValueAt(row, 4)));
        txt_tel.setText((String) (student_table.getValueAt(row, 5)));
        txt_address.setText((String) (student_table.getValueAt(row, 6)));
//        txt_add2.setText((String) (student_table.getValueAt(row, 8)));
//        txt_apt.setText((String) (student_table.getValueAt(row, 9)).toString());
        txt_pc.setText((String) (student_table.getValueAt(row, 8)));
//        txt_courseid.setText((String) (student_table.getValueAt(row, 11)));
//        txt_courseid1.setText((String) (student_table.getValueAt(row, 12)));
//        txt_me.setText((String) (student_table.getValueAt(row, 13)).toString());
//        txt_fe.setText((String) (student_table.getValueAt(row, 14)).toString());

        // TODO add your handling code here:
    }//GEN-LAST:event_student_tableMouseClicked

    private void txt_search1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search1KeyReleased
        try {
            String sql = "Select * from Student_Information where Student_ID like ? ";
//            String sql = "select * from Student_Information where [Student_ID]=? ";

            pst = conn.prepareStatement(sql);
            pst.setString(1, "%" + txt_search1.getText().trim() + "%");
            rs = pst.executeQuery();
            student_table.setModel(DbUtils.resultSetToTableModel(rs));
//
//            String add1 = rs.getString("id");
//            txt_studentid.setText(add1);

//            String add2 = rs.getString("first_name");
//            txt_firstname.setText(add2);
//
//            String add3 = rs.getString("surname");
//            txt_surname.setText(add3);
//
//            String add4 = rs.getString("Dob");
//            txt_dob.setText(add4);
//
//            String add5 = rs.getString("Email");
//            txt_email.setText(add5);
//
//            String add6 = rs.getString("Telephone");
//            txt_tel.setText(add6);
//
//            String add7 = rs.getString("Address");
//            txt_address.setText(add7);
//
//            String add8 = rs.getString("Batch");
//            txt_add2.setText(add8);
//
//            String add9 = rs.getString("Exam");
//            txt_apt.setText(add9);
//
//            String add10 = rs.getString("[Student_ID]");
//            txt_pc.setText(add10);
//
//            String add11 = rs.getString("[Major]");
//            txt_courseid.setText(add11);
//
//            byte[] img = rs.getBytes("[Image]");
//            ImageIcon imageIcon = new ImageIcon(new ImageIcon(img).getImage().getScaledInstance(lbl_img.getWidth(), lbl_img.getHeight(), Image.SCALE_SMOOTH));
//            lbl_img.setIcon(imageIcon);
        } catch (Exception e) {

        } finally {

            try {

                rs.close();
                pst.close();

            } catch (Exception e) {
                e.printStackTrace();
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txt_search1KeyReleased

    private void txt_pcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_pcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_pcActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentInformation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu File;
    private javax.swing.JButton cmd_save;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu lbl_date;
    private javax.swing.JMenu lbl_time;
    private javax.swing.JRadioButton r_female;
    private javax.swing.JRadioButton r_male;
    private javax.swing.JTable student_table;
    private javax.swing.JTextField txt_address;
    private javax.swing.JTextField txt_dob;
    private javax.swing.JTextField txt_email;
    private javax.swing.JLabel txt_emp;
    private javax.swing.JTextField txt_firstname;
    private javax.swing.JTextField txt_pc;
    private javax.swing.JTextField txt_search1;
    private javax.swing.JTextField txt_studentid;
    private javax.swing.JTextField txt_surname;
    private javax.swing.JTextField txt_tel;
    // End of variables declaration//GEN-END:variables

    private ImageIcon format = null;
    //strin filename
    String filename = null;
    byte[] person_image = null;

    private String gender;

}
